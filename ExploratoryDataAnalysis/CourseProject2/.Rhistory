knitr::opts_chunk$set(echo = TRUE)
url <- "https://stackoverflow.com/questions/28325744/r-xlsx-package-error"
library(httr)
html2 = GET(url)
content2 = content(html2, as = "text")
parsedHtml = htmlParse(content2, asText = TRUE)
xpathSApply(content2, "//title", xmlValue)
library(XML)
parsedHtml = htmlParse(content2, asText = TRUE)
xpathSApply(content2, "//title", xmlValue)
xpathSApply(parsedHtml, "//title", xmlValue)
library(jsonlite)
#install.packages("httpuv")
library(httpuv)
install.packages("httpuv")
#install.packages("httpuv")
library(httpuv)
#install.packages("httr")
library(httr)
# Can be github, linkedin etc depending on application
oauth_endpoints("github")
# Change based on what you
myapp <- oauth_app(appname = "Rprogramming",
key = client_id,
secret = client_secret)
client_secret <- "920a285f39aaf89a01634e9fde03f74dcb57fd76"
client_id <- "fb9b0d1585ecac9cf3ea"
# Change based on what you
myapp <- oauth_app(appname = "Rprogramming",
key = client_id,
secret = client_secret)
# Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# Change based on what you
myapp <- oauth_app(appname = "Rprogramming",
key = "fb9b0d1585ecac9cf3ea",
secret = "920a285f39aaf89a01634e9fde03f74dcb57fd76")
# Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# Change based on what you
myapp <- oauth_app(appname = "Rprogramming",
key = "fb9b0d1585ecac9cf3ea",
secret = "920a285f39aaf89a01634e9fde03f74dcb57fd76")
# Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
json1 = content(req)
gitDF = jsonlite::fromJSON(jsonlite::toJSON(json1))
summary(gitDF)
gitDF[gitDF$full_name == "jtleek/datasharing", "created_at"]
library(XML)
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
html <- htmlTreeParse(url, useInternalNodes = TRUE)
html <- htmlParse(url, useInternalNodes = TRUE)
html2 = GET(url)
content2 = content(html2, as = "text")
content2[10,]
parsedHtml = htmlParse(content2, asText = TRUE)
parsedHtml[10]
parsedHtml
xpathSApply(parsedHtml,  nchar())
library(httr)
xpathSApply(parsedHtml,  nchar())
xpathSApply(parsedHtml,  nchar)
html <- readLines(url)
lapply(html[10,20,30,40,100], nchar)
lapply(html[c(10,20,30,40,100)], nchar)
library(data.table)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
destfile = "./data/quizq4.for")
dat5<- fread(".data/quizq4.for")
dat5<- read.fortran(".data/quizq4.for")
dat5<- read.fortran(".data/quizq4.for", format = c("x", "x", "x", "F1", "x", "x", "x", "x", "x"))
dat5<- read.fortran(".data/quizq4.for", format = c( "F1"))
dat5<- read.fwf(".data/quizq4.for",
skip=4,
widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
dat5<- read.fwf(".data/quizq4.for",
skip=4,
widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
dat5<- read.fwf(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
skip=4,
widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
dat5<- read.fwf(file =url( "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,
widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
head(dat5)
sum(dat5$V4)
library(swirl)
swirl()
swirl()
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
print(cran)
cran
cran %>% group_by(package)
group_by(cran, package)
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, count > 465)
top_unique <- filter(pack_sum, unique() > 465)
top_unique <- filter(pack_sum, unique > 465)
View(top_counts)
View(top_unique)
top_unique_sorted <- arrange(top_unique, unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
cran %>%
select(ip_id, country, package, size) %>%
print
submit()
submit()
cran %>%
select(ip_id, country, package, size)
submit()
submit()
submit()
submit()
0
swirl()
play()
0
exit()
nxt()
library(swirl)
swirl
swirl()
0
library(swir)
library(swirl)
swirl()
library(swirk)
library(swirl)
swirl
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames,"|", fixed = TRUE)
cnames
names(pm0)<- make.names(cnames[[1]][[wcol]])
names(pm0)<- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative,na.rm)
sum(negative,na.rm=TRUE)
mean(negative,na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
intersect(site0,site1)
both <- intersect(site0,site1)
both
head(pm0)
cnt0 <- subset(pm0,State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1,State.Code == 36 & county.site %in% both)
sapply(split(cnt0,cnt0$county.site), nrow)
sapply(split(cnt1,cn1t$county.site), nrow)
sapply(split(cnt1,cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code==36 & Site.ID==2008)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub<-pm0sub$Sample.Value
x1sub<-pm1sub$Sample.Value
dates0<-as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1<-as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline
abline(h=median(x0sub,na.rm = TRUE),lwd=2)
plot(dates1,x1sub,pch=20)
abline(h=median(x1sub,na.rm = TRUE),lwd=2)
rng<-range(range(x0sub,x1sub,na.rm = TRUE))
rng<-range(x0sub,x1sub,na.rm = TRUE)
rng
mn0<-with(pm0,tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
mn0
str(mn0)
mn1<-with(pm1,tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0<-data.frame(state=names(mn0),mean=mn0)
d1<-data.frame(state=names(mn1),mean=mn1)
mrg<-merge(d0,d1,set="state")
mrg<-merge(d0,d1,by="state")
dim(mrg)
head(mrg)
with(mrg,plot(rep(1,52),mrg[,2],xlim = c(.5,2.5)))
with(mrg,points(rep(2,52),mrg[,3]))
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x<mrg$mean.y]
mrg[mrg$mean.x<mrg$mean.y,]
# step 0: load packages
library(tidyverse)
library(ggplot2)
# read in data (plot1.R will provide the data)
classcode <- readRDS("./data/Source_Classification_Code.rds")
#change working directory (comment out after)
setwd(choose.dir())
# read in data (plot1.R will provide the data)
classcode <- readRDS("./data/Source_Classification_Code.rds")
pm25<-readRDS("./data/summarySCC_pm25.rds")
getwd()
classcode %>% group_by(Short.Name) %>% summarise(Tot=n())
View(classcode)
classcode %>% group_by(SCC.Level.One) %>% summarise(Tot=n())
classcode %>% group_by(SCC.Level.Two) %>% summarise(Tot=n())
lev2 <-classcode %>% group_by(SCC.Level.Two) %>% summarise(Tot=n())
View(lev2)
intcomb <- classcode %>% filter(SCC.Level.One=="Internal Combustion Engines") %>% group_by(Short.Name) %>% summarise(Tot = n())
View(intcomb)
lev4 <-classcode %>% group_by(SCC.Level.Four) %>% summarise(Tot=n())
View(lev4)
mobsource <- classcode %>% filter(SCC.Level.One=="Mobile Sources") %>% group_by(SCC.Level.Two) %>% summarise(Tot = n())
View(mobsource)
# create the data set that contains motor vehicle emissions in baltimore city
# first grab the codes that correspond to "Mobile Sources" as SCC Level One
mobile_source <- classcode %>% filter(SCC.Level.One=="Mobile Sources") %>%
select(SCC, Short.Name)
# filter the pollution data to only baltimore and inner join the mobile source codes
baltimore_mobil <- pm25 %>% filter(fips=="24510") %>%
inner_join(.,mobile_source,by="SCC")
View(baltimore_mobil)
# filter the pollution data to only baltimore and inner join the mobile source codes
baltimore_mobil <- pm25 %>% filter(fips=="24510") %>%
inner_join(.,mobile_source,by="SCC") %>% group_by(year) %>%
summarise(Totpm=sum(Emissions))
View(baltimore_mobil)
# Create a the plot that shows the total emissions for each year
ggplot() +
geom_point(data=baltimore_mobil,aes(x=year,y=Totpm))+
geom_line(data=baltimore_mobil[1:2,],aes(x=year,y=Totpm),col="green")+
geom_line(data=baltimore_mobil[2:3,],aes(x=year,y=Totpm),col="red")+
geom_line(data=baltimore_mobil[3:4,],aes(x=year,y=Totpm),col="green")+
geom_line(data=baltimore_mobil[c(1,4),],aes(x=year,y=Totpm),col="green")+
labs(x="Year",y="Emissions (in Tons)",title="Baltimore Coal Pollution Emissions")+
theme(legend.position="right")
# Create a the plot that shows the total emissions for each year
ggplot() +
geom_point(data=baltimore_mobil,aes(x=year,y=Totpm))+
geom_line(data=baltimore_mobil[1:2,],aes(x=year,y=Totpm),col="green")+
geom_line(data=baltimore_mobil[2:3,],aes(x=year,y=Totpm),col="red")+
geom_line(data=baltimore_mobil[3:4,],aes(x=year,y=Totpm),col="red")+
geom_line(data=baltimore_mobil[c(1,4),],aes(x=year,y=Totpm),col="green")+
labs(x="Year",y="Emissions (in Tons)",title="Baltimore Coal Pollution Emissions")+
theme(legend.position="right")
# Create a the plot that shows the total emissions for each year
ggplot() +
geom_point(data=baltimore_mobil,aes(x=year,y=Totpm))+
geom_line(data=baltimore_mobil[1:2,],aes(x=year,y=Totpm),col="green")+
geom_line(data=baltimore_mobil[2:3,],aes(x=year,y=Totpm),col="red")+
geom_line(data=baltimore_mobil[3:4,],aes(x=year,y=Totpm),col="red")+
geom_line(data=baltimore_mobil[c(1,4),],aes(x=year,y=Totpm),col="green")+
labs(x="Year",y="Emissions (in Tons)",title="Baltimore Coal Pollution Emissions")+
theme(legend.position="right")
dev.copy(png, "plot5.png")
dev.off()
# use the same mobil source codes from plot5.R
mobile_source <- classcode %>% filter(SCC.Level.One=="Mobile Sources") %>%
select(SCC, Short.Name)
# filter the pollution data to only have baltimore and Los Angeles data
balt_LA <- pm25 %>% filter(fips %in% c("24510", "06037"))
View(intcomb)
View(balt_LA)
pm25 %>% group_by(fips) %>% summarise(Tot=n())
pm25 %>% group_by(fips) %>% summarise(Tot=n()) %>% arrange(Tot)
pm25 %>% group_by(fips) %>% summarise(Tot=n()) %>% arrange(-Tot)
# inner join the mobile codes to the baltimore and LA data
balt_LA_mobile <- inner_join(balt_LA, mobile_source,by="SCC") %>%
group_by(year,fips) %>% summarise(Totpm = sum(Emissions))
View(balt_LA_mobile)
# create the right categories for the fips column
levels(balt_LA_mobile$fips)
# create the right categories for the fips column
balt_LA_mobile$fips <- as.factor(balt_LA_mobile)
# create the right categories for the fips column
balt_LA_mobile$fips <- as.factor(balt_LA_mobile$fips)
# create the right categories for the fips column
balt_LA_mobile <- balt_LA_mobile %>%
mutate(fips = as.factor(fips),levels(fips)=c("Baltimore", "LA"))
# create the right categories for the fips column
balt_LA_mobile <- balt_LA_mobile %>%
mutate(fips <- as.factor(fips),levels(fips)<-c("Baltimore", "LA"))
View(balt_LA_mobile)
# inner join the mobile codes to the baltimore and LA data
balt_LA_mobile <- inner_join(balt_LA, mobile_source,by="SCC") %>%
group_by(year,fips) %>% summarise(Totpm = sum(Emissions))
# create the right categories for the fips column
balt_LA_mobile <- balt_LA_mobile %>%
mutate(fips <- as.factor(fips),levels(fips)<-c("Baltimore", "LA"))
View(balt_LA_mobile)
# inner join the mobile codes to the baltimore and LA data
balt_LA_mobile <- inner_join(balt_LA, mobile_source,by="SCC") %>%
group_by(year,fips) %>% summarise(Totpm = sum(Emissions))
# create the right categories for the fips column
balt_LA_mobile <- balt_LA_mobile %>%
mutate(fips <- as.factor(fips),City = levels(fips)<-c("LA", "Baltimore"))
View(balt_LA_mobile)
# create the right categories for the fips column
balt_LA_mobile <- balt_LA_mobile %>%
mutate(fips = as.factor(fips),City = levels(fips)<-c("LA", "Baltimore"))
View(balt_LA_mobile)
# inner join the mobile codes to the baltimore and LA data
balt_LA_mobile <- inner_join(balt_LA, mobile_source,by="SCC") %>%
group_by(year,fips) %>% summarise(Totpm = sum(Emissions))
# create the right categories for the fips column
balt_LA_mobile <- balt_LA_mobile %>%
mutate(fips = as.factor(fips),City = levels(fips)<-c("LA", "Baltimore"))
View(balt_LA_mobile)
# creat the plot that shows both cities emission each year
ggplot(balt_LA_mobile)+
geom_line(aes(x=year, y=Totpm, col=City))+
labs(x="Year", y="Emissions (in Tons)", title="Baltimore vs LA Emissions 1999-2008")
# creat the plot that shows both cities emission each year
ggplot(balt_LA_mobile)+
geom_line(aes(x=year, y=Totpm, col=City),lwd=2)+
labs(x="Year", y="Emissions (in Tons)", title="Baltimore vs LA Emissions 1999-2008")
# creat the plot that shows both cities emission each year
ggplot(balt_LA_mobile)+
geom_line(aes(x=year, y=Totpm, col=City),lwd=2)+
labs(x="Year", y="Emissions (in Tons)", title="Baltimore vs LA Emissions 1999-2008")
dev.copy(png, "plot6.png")
dev.off()
